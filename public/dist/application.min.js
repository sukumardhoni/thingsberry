"use strict";var ApplicationConfiguration=function(){var applicationModuleName="thingsberry.com",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ngStorage","angularjs-dropdown-multiselect","angular.filter","naif.base64","ngTagsInput"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return"guest"===role||Authentication.user&&void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),function(app){app.registerModule("articles"),app.registerModule("articles.services"),app.registerModule("articles.routes",["ui.router","articles.services"])}(ApplicationConfiguration),function(app){app.registerModule("companies"),app.registerModule("companies.services"),app.registerModule("companies.routes",["ui.router","companies.services"])}(ApplicationConfiguration),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),function(){function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Articles",state:"articles",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("topbar","articles",{title:"Create Article",state:"articles.create",roles:["user"]})}angular.module("articles").run(menuConfig),menuConfig.$inject=["Menus"]}(),function(){function routeConfig($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/client/views/list-articles.client.view.html",controller:"ArticlesListController",controllerAs:"vm",data:{pageTitle:"Articles List"}}).state("articles.create",{url:"/create",templateUrl:"modules/articles/client/views/form-article.client.view.html",controller:"ArticlesController",controllerAs:"vm",resolve:{articleResolve:newArticle},data:{roles:["user","admin"],pageTitle:"Articles Create"}}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/client/views/form-article.client.view.html",controller:"ArticlesController",controllerAs:"vm",resolve:{articleResolve:getArticle},data:{roles:["user","admin"],pageTitle:"Edit Article {{ articleResolve.title }}"}}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/client/views/view-article.client.view.html",controller:"ArticlesController",controllerAs:"vm",resolve:{articleResolve:getArticle},data:{pageTitle:"Article {{ articleResolve.title }}"}})}function getArticle($stateParams,ArticlesService){return ArticlesService.get({articleId:$stateParams.articleId}).$promise}function newArticle(ArticlesService){return new ArticlesService}angular.module("articles.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getArticle.$inject=["$stateParams","ArticlesService"],newArticle.$inject=["ArticlesService"]}(),function(){function ArticlesController($scope,$state,article,Authentication){function remove(){confirm("Are you sure you want to delete?")&&vm.article.$remove($state.go("articles.list"))}function save(isValid){function successCallback(res){$state.go("articles.view",{articleId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.article._id?vm.article.$update(successCallback,errorCallback):vm.article.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.articleForm"),!1)}var vm=this;vm.article=article,vm.authentication=Authentication,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("articles").controller("ArticlesController",ArticlesController),ArticlesController.$inject=["$scope","$state","articleResolve","Authentication"]}(),function(){function ArticlesListController(ArticlesService){var vm=this;vm.articles=ArticlesService.query()}angular.module("articles").controller("ArticlesListController",ArticlesListController),ArticlesListController.$inject=["ArticlesService"]}(),function(){function ArticlesService($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}angular.module("articles.services").factory("ArticlesService",ArticlesService),ArticlesService.$inject=["$resource"]}(),function(){function routeConfig($stateProvider){$stateProvider.state("companies",{"abstract":!0,url:"/products",template:"<ui-view/>",data:{breadcrumbProxy:"companies.list"}}).state("companies.list",{url:"/list/:cat?/:com?/:name?/:isSearch",templateUrl:"modules/companies/client/views/list-companies.client.view.html",controller:"CompanyListController",controllerAs:"vm",data:{pageTitle:"Products List",displayName:"Searched Products"}}).state("companies.create",{url:"/create",templateUrl:"modules/companies/client/views/form-company.client.view.html",controller:"CompanyController",controllerAs:"vm",resolve:{companyResolve:newCompany},data:{roles:["user","admin"],pageTitle:"Create Product"}}).state("companies.add",{url:"/add_your_product",templateUrl:"modules/companies/client/views/add-company.client.view.html",controller:"CompanyController",controllerAs:"vm",resolve:{companyResolve:newCompany},data:{pageTitle:"Add Product"}}).state("companies.edit",{url:"/:companyId/edit",templateUrl:"modules/companies/client/views/add-company.client.view.html",controller:"CompanyController",controllerAs:"vm",resolve:{companyResolve:getCompany},data:{roles:["user","admin"],pageTitle:"Edit Company {{ companyResolve.Proname }}"}}).state("companies.view",{url:"/:companyId",templateUrl:"modules/company/client/views/view-company.client.view.html",controller:"CompanyController",controllerAs:"vm",resolve:{companyResolve:getCompany},data:{pageTitle:"Company {{ companyResolve.Proname }}"}})}function getCompany($stateParams,CompanyService){return CompanyService.get({companyId:$stateParams.companyId}).$promise}function newCompany(CompanyService){return new CompanyService}angular.module("companies.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getCompany.$inject=["$stateParams","CompanyService"],newCompany.$inject=["CompanyService"]}(),function(){function CompanyController($scope,$state,company,Authentication,NotificationFactory,$timeout,dataShare,CompanyServiceUpdate,$uibModal,$log,$q,CategoryService){function genBusinessArray(businessArray){for(var businessSecArr=[],i=0;i<businessArray.length;i++)businessSecArr.push(businessArray[i].id);return businessArray.length===businessSecArr.length?businessSecArr:void 0}function addCompanyDetails(isValid){function successUpdateCallback(res){$state.go("companies.list",{isSearch:!1}),NotificationFactory.success("Successfully Updated Product details...","Product Name : "+res.Proname)}function errorUpdateCallback(res){vm.error=res.data.message,NotificationFactory.error("Failed to Update Product details...",res.data.message)}function successCallback(res){$state.go("companies.list",{isSearch:!1}),NotificationFactory.success("Successfully Saved Product details...","Product Name : "+res.Proname)}function errorCallback(res){vm.error=res.data.message,NotificationFactory.error("Failed to save Product details...",res.data.message)}return console.log("vm.company.categories value is : "+JSON.stringify(vm.company.ProCat)),$scope.addBtnText="Submiting...",isValid?void(vm.company._id?(console.log("Update product is called : "+JSON.stringify(vm.company)),vm.company.businessSector=genBusinessArray($scope.businessSectorSelectedArray),vm.company.serviceOffered=genBusinessArray($scope.serviceOfferedSelectedArray),vm.company.productImageURL||(vm.company.logo={filetype:$scope.productImg.filetype,base64:$scope.productImg.base64}),CompanyServiceUpdate.UpdateProduct.update({companyId:vm.company._id},vm.company,successUpdateCallback,errorUpdateCallback)):(vm.company.businessSector=genBusinessArray($scope.businessSectorSelectedArray),vm.company.serviceOffered=genBusinessArray($scope.serviceOfferedSelectedArray),vm.company.productImageURL||(vm.company.logo={filetype:$scope.productImg.filetype,base64:$scope.productImg.base64}),console.log("Created product is called : "+JSON.stringify(vm.company)),vm.company.$save(successCallback,errorCallback))):($scope.$broadcast("show-errors-check-validity","vm.form.companyForm"),!1)}var vm=this;vm.company=company,vm.authentication=Authentication,vm.error=null,vm.form={},vm.addCompanyDetails=addCompanyDetails,$scope.addBtnText="SUBMIT",$scope.loadCategories=function(){var catsList=CategoryService.query(),defObj=$q.defer();return catsList.$promise.then(function(result){defObj.resolve(result),console.log("$scope.catsList is : "+JSON.stringify(catsList))}),defObj.promise},$scope.removeProduct=function(){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"modules/companies/client/views/modals/delete-product-modal.client.view.html",controller:"ModalInstanceCtrl",backdrop:"static",resolve:{productFromModal:function(){return vm.company}}});modalInstance.result.then(function(product){product&&CompanyServiceUpdate.DeleteProduct.remove({companyId:product._id},function(res){$state.go("companies.list",{isSearch:!1}),NotificationFactory.success("Successfully Removed Product details...","Product Name : "+res.Proname)},function(err){NotificationFactory.error("Failed to Remove Product details...","Product Name : "+vm.company.Proname)})},function(){})},$scope.$on("data_shared",function(){var proDetails=dataShare.getData();$scope.previewImg(proDetails.logo),$scope.productImg=proDetails.logo,vm.company=proDetails}),$scope.businessSectorSelectedArray=[],$scope.businessSectorList=[{id:1,label:"Agriculture & Fisheries applications"},{id:2,label:"Automotive"},{id:3,label:"Asset & Cargo Tracking; Fleet Management; Personal Tracking"},{id:4,label:"Agriculture"},{id:5,label:"Automotive Products"},{id:6,label:"Asset & Cargo Tracking"},{id:7,label:"Fisheries applications"},{id:8,label:"Fleet Management"},{id:9,label:"Asset & Cargo Tracking; Fleet Management; Personal Tracking"},{id:10,label:"Agriculture applications"},{id:11,label:"Automotive Products"},{id:12,label:"Personal Tracking"}],$scope.businessSectorSettings={displayProp:"label",idProp:"label",showCheckAll:!1,showUncheckAll:!1,dynamicTitle:!1,buttonClasses:"business_sector_select"},$scope.businessSectorTexts={buttonDefaultText:"Business Sector"},$scope.removebusinessSectorSelectedVal=function(indexVal){$scope.businessSectorSelectedArray.splice(indexVal,1)},$scope.serviceOfferedSelectedArray=[],$scope.serviceOfferedList=[{id:1,label:"Agriculture & Fisheries applications"},{id:2,label:"Automotive"},{id:3,label:"Asset & Cargo Tracking; Fleet Management; Personal Tracking"},{id:4,label:"Agriculture"},{id:5,label:"Automotive Products"},{id:6,label:"Asset & Cargo Tracking"},{id:7,label:"Fisheries applications"},{id:8,label:"Fleet Management"},{id:9,label:"Asset & Cargo Tracking; Fleet Management; Personal Tracking"},{id:10,label:"Agriculture applications"},{id:11,label:"Automotive Products"},{id:12,label:"Personal Tracking"}],$scope.serviceOfferedSettings={displayProp:"label",idProp:"label",showCheckAll:!1,showUncheckAll:!1,dynamicTitle:!1,buttonClasses:"business_sector_select"},$scope.serviceOfferedTexts={buttonDefaultText:"Service Offered"},$scope.removeserviceOfferedSelectedVal=function(indexVal){$scope.serviceOfferedSelectedArray.splice(indexVal,1)},$scope.operationalRegionsList=["Africa","Asia-Pacific","Europe","Latin America","Middle East","North America","All Regions"],$scope.selectionOperational={ids:{}},$scope.categoriesList=["Category","HOME","HEALTH CARE","AUTOMOBILE","AGRICULTURE","UTILITIES","ENTERTAINMENT","ACCESORIES","TOYS","SPORT","ELECTRONICS","OFFICE PRODUCTS","BABY PRODUCTS","MOTORS"],$scope.SelectedCat=function(val){},$scope.previewImg=function(val){$scope.imgUrl="data:"+val.filetype+";base64,"+val.base64}}angular.module("companies").controller("CompanyController",CompanyController).controller("ModalInstanceCtrl",["$scope","$uibModalInstance","productFromModal",function($scope,$uibModalInstance,productFromModal){$scope.product=productFromModal,$scope.ok=function(product){$uibModalInstance.close(product)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),CompanyController.$inject=["$scope","$state","companyResolve","Authentication","NotificationFactory","$timeout","dataShare","CompanyServiceUpdate","$uibModal","$log","$q","CategoryService"]}(),function(){function CompanyListController(CompanyService,$scope,$stateParams,SearchProducts,ListOfProducts){var vm=this;$scope.getSearchedProductsList=function(){$scope.spinnerLoading=!0,$scope.searchOrder={},$scope.searchOrder.Lists=[{name:"Sort by",value:""},{name:"Latest",value:"-created"},{name:"Ratings",value:"created"}],$scope.searchOrder.List=$scope.searchOrder.Lists[0].value,"false"==$stateParams.isSearch?ListOfProducts.query({},function(res){vm.companys=res,$scope.spinnerLoading=!1},function(err){console.log("Failed to fetch the product details : "+err)}):SearchProducts.query({ProCategory:$stateParams.cat,ProCompany:$stateParams.com,ProName:$stateParams.name},function(res){vm.companys=res,$scope.spinnerLoading=!1},function(err){console.log("Failed to fetch the product details : "+JSON.stringify(err))})}}angular.module("companies").controller("CompanyListController",CompanyListController),CompanyListController.$inject=["CompanyService","$scope","$stateParams","SearchProducts","ListOfProducts"]}(),angular.module("companies").directive("productDisplay",["dataShare","$state","$localStorage",function(dataShare,$state,$localStorage){return{restrict:"E",scope:{details:"="},templateUrl:"modules/companies/client/views/directive-partials/product-display.client.view.html",link:function(scope,elem,attrs){scope.user=$localStorage.user,scope.proImgUrl=function(){return scope.details.productImageURL?scope.details.productImageURL:"data:"+scope.details.logo.filetype+";base64,"+scope.details.logo.base64},scope.editProduct=function(Pro){dataShare.setData(Pro),$state.go("companies.add")}}}}]),function(){function CategoryService($resource){return $resource("api/categories",{},{query:{method:"GET",isArray:!0}})}function CompanyService($resource){return $resource("api/companies/:companyId",{companyId:"@companyId"},{update:{method:"PUT"}})}function dataShare($rootScope,$timeout){var service={};return service.data=!1,service.setData=function(data){this.data=data,$timeout(function(){$rootScope.$broadcast("data_shared")},100)},service.getData=function(){return this.data},service}dataShare.$inject=["$rootScope","$timeout"],angular.module("companies.services").factory("CompanyService",CompanyService).factory("CategoryService",CategoryService).factory("dataShare",dataShare).factory("CompanyServiceUpdate",["$resource",function($resource){return{UpdateProduct:$resource("api/companies/:companyId",{companyId:"@companyId"},{update:{method:"PUT"}}),DeleteProduct:$resource("api/companies/:companyId",{companyId:"@companyId"},{remove:{method:"DELETE"}})}}]).factory("Movies",["$resource",function($resource){return $resource("api/listOfMovies/:mainType/:subType",{mainType:"@mainType",subType:"@subType"},{query:{method:"GET",isArray:!0}})}]),CategoryService.$inject=["$resource"],CompanyService.$inject=["$resource","$rootScope","$timeout"]}(),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),function(){function MenuConfig(Menus){Menus.addMenu("account",{roles:["user"]}),Menus.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),Menus.addSubMenuItem("account","settings",{title:"Edit Profile",state:"settings.profile"}),Menus.addSubMenuItem("account","settings",{title:"Change Password",state:"settings.password"})}angular.module("core").run(MenuConfig),MenuConfig.$inject=["Menus"]}(),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("aboutus",{url:"/aboutus",templateUrl:"modules/core/client/views/about-us.client.view.html",data:{pageTitle:"About ThingsBerry"}}).state("blog",{url:"/blog",templateUrl:"modules/core/client/views/blog.client.view.html",data:{pageTitle:"ThingsBerry Blog"}}).state("contactus",{url:"/contactus",templateUrl:"modules/core/client/views/contact-us.client.view.html",data:{pageTitle:"Contact ThingsBerry"}}).state("getListed",{url:"/getListed/:isPremium",templateUrl:"modules/core/client/views/getListed.client.view.html",data:{pageTitle:"Get Listed ThingsBerry"}}).state("addyourcompany",{url:"/addyourcompany",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0,pageTitle:"Not-Found"}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0,pageTitle:"Bad-Request"}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0,pageTitle:"Forbidden"}})}]),angular.module("core").controller("ContactUsController",["$scope","Authentication","ContactUsService","NotificationFactory","GetListedService",function($scope,Authentication,ContactUsService,NotificationFactory,GetListedService){$scope.authentication=Authentication,$scope.contactUs=function(){function successCallback(res){NotificationFactory.success("Thankyou for Contacting ThingsBerry","Hi "+res.firstName),$scope.contact=""}function errorCallback(res){}ContactUsService.send($scope.contact,successCallback,errorCallback)},$scope.getListedEmail=function(){function successCallback(res){NotificationFactory.success("Thankyou for Contacting ThingsBerry",res.contactName),$scope.getListed=""}function errorCallback(res){}"isPremium"==$stateParams.isPremium&&($scope.getListed.isPremium=!0),$scope.getListed.isPremium=!1,GetListedService.send($scope.getListed,successCallback,errorCallback)}}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus","$http","$localStorage",function($scope,$state,Authentication,Menus,$http,$localStorage){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.accountMenu=Menus.getMenu("account").items[0],$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){console.log('id="tb-navbar-collapse" is called : '+$scope.isCollapsed),$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.signout=function(){$http.defaults.headers.common.Authorization="Basic "+$localStorage.token,$http.post("/api/auth/jwtSignout").success(function(response){$scope.authentication.user="",delete $localStorage.token,delete $localStorage.user,$state.go($state.previous.state.name||"home",$state.previous.params)})}}]),angular.module("core").controller("HomeController",["$scope","Authentication","SearchProducts","$state","CategoryService","$q","Movies",function($scope,Authentication,SearchProducts,$state,CategoryService,$q,Movies){$scope.authentication=Authentication,$scope.Advanced_Search_Fields=!1,$scope.categoriesList=["Category","HOME","HEALTH CARE","AUTOMOBILE","AGRICULTURE","UTILITIES","ENTERTAINMENT","ACCESORIES","TOYS","SPORT","ELECTRONICS","OFFICE PRODUCTS","BABY PRODUCTS","MOTORS"],$scope.CountriesList=["Country","INDIA","US","UK","CHINA","JAPAN","AUSTRALIA"],$scope.StatesList=["State","ANDHRA PRADESH","NEW JERSY","LONDON","HONG KONG","SYDNEY"],$scope.BusinessList=["Business","SMALL SCALE","LARGE SCALE","AUTOMOBILES","TRADING","MARKETING"],$scope.getSearchedProducts=function(details){if(details.Category||details.Company||details.Product){var catsArray=[];if(details.Category)if(details.Category.length>0)for(var i=0;i<details.Category.length;i++)catsArray.push(details.Category[i].title);else catsArray.push(details.Category.title);""==catsArray&&void 0==details.Company&&void 0==details.Product?$state.go("companies.list",{isSearch:!1}):$state.go("companies.list",{cat:""==catsArray?"Category":catsArray,com:details.Company,name:details.Product})}else $state.go("companies.list",{isSearch:!1})},$scope.homePageProductDetails={title:"SONY",logoURL:"../../../../modules/core/client/img/brand/sony logo.png",description:"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s",webAddress:"http://www.sonos.com/shop/play5"},$scope.loadCategories=function(){var catsList=CategoryService.query(),defObj=$q.defer();return catsList.$promise.then(function(result){defObj.resolve(result),console.log("$scope.catsList is : "+JSON.stringify(catsList))}),defObj.promise},$scope.slides=["http://lorempixel.com/450/300/sports/1","http://lorempixel.com/450/300/sports/2","http://lorempixel.com/450/300/sports/3","http://lorempixel.com/450/300/sports/4"]}]),function(){function pageTitle($rootScope,$timeout,$interpolate,$state){function link(scope,element){function listener(event,toState){var title=getTitle($state.$current);$timeout(function(){element.text(title)},0,!1)}function getTitle(currentState){var applicationCoreTitle="thingsberry.com",workingState=currentState;if(currentState.data){workingState="undefined"!=typeof workingState.locals?workingState.locals.globals:workingState;var stateTitle=$interpolate(currentState.data.pageTitle)(workingState);return applicationCoreTitle+" - "+stateTitle}return applicationCoreTitle}$rootScope.$on("$stateChangeSuccess",listener)}var directive={retrict:"A",link:link};return directive}angular.module("core").directive("pageTitle",pageTitle),pageTitle.$inject=["$rootScope","$timeout","$interpolate","$state"]}(),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("ContactUsService",["$resource",function($resource){return $resource("api/contactUs",{},{send:{method:"POST"}})}]).factory("GetListedService",["$resource",function($resource){return $resource("api/getListed",{},{send:{method:"POST"}})}]),angular.module("core").factory("authInterceptor",["$q","$injector","Authentication",function($q,$injector,Authentication){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").factory("NotificationFactory",function(){return toastr.options={closeButton:!0,debug:!1,progressBar:!0,positionClass:"toast-top-right",onclick:null,showDuration:"400",hideDuration:"1000",timeOut:"7000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"},{success:function(msg,title){toastr.success(msg,title)},error:function(msg,title){toastr.error(msg,title)}}}),angular.module("core").factory("SearchProducts",["$resource",function($resource){return $resource("api/search/products/:ProCategory/:ProCompany/:ProName",{ProCategory:"@ProCategory",ProCompany:"@ProCompany",ProName:"@ProName"},{query:{method:"GET",timeout:2e4,isArray:!0}})}]).factory("ListOfProducts",["$resource",function($resource){return $resource("api/listOfProducts",{},{query:{method:"GET",timeout:2e4,isArray:!0}})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController",data:{pageTitle:"Users List"}}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]},data:{pageTitle:"Edit {{ userResolve.displayName }}"}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]},data:{pageTitle:"Edit User {{ userResolve.displayName }}"}})}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{
roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html",data:{pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html",data:{pageTitle:"Settings password"}}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html",data:{pageTitle:"Settings accounts"}}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html",data:{pageTitle:"Settings picture"}}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html",data:{pageTitle:"Signin"}}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html",data:{pageTitle:"Password forgot"}}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html",data:{pageTitle:"Password reset form"}})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator","$localStorage","NotificationFactory",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator,$localStorage,NotificationFactory){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.pwdCompare=function(){console.log("Credentials checking pwd "),$scope.credentials.password1===$scope.credentials.password2?($scope.error=null,$scope.credentials.password=$scope.credentials.password1):$scope.error="Password Doesn't match"},$scope.signup=function(isValid){return $scope.buttonTextSignUp="Signing Up...",$scope.error=null,isValid?void $http.post("/api/auth/jwtSignup",$scope.credentials).success(function(response){response.type===!1?($scope.error=response.data,$scope.buttonTextSignUp="Sign Up",console.log("Error Msg : "+JSON.stringify(response.data))):($scope.error=null,$scope.populateUserLocally(response))}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/jwtSignin",$scope.credentials).success(function(response){response.type===!1?($scope.error=response.data,console.log("Error Msg : "+JSON.stringify(response.data))):($scope.error=null,$scope.populateUserLocally(response))}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.populateUserLocally=function(respUser){$scope.authentication.user=respUser,$localStorage.user=respUser,$localStorage.token=respUser.token,NotificationFactory.success("Hi "+respUser.displayName,"Authentication Success !"),$state.go($state.previous.state.name||"home",$state.previous.params)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/jwtForgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/jwtChangePassword",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication","$localStorage",function($scope,$http,$location,Users,Authentication,$localStorage){$scope.authentication=Authentication,$scope.user=$localStorage.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,$scope.authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication","$localStorage",function($scope,Authentication,$localStorage){$scope.user=Authentication.user,$scope.user=$localStorage.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with 10 or more characters, numbers, lowercase, uppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
